2012-11-15  CarlosAlbertoEnciso <carlos.alberto.enciso@gmail.com>
     * dwarf.h: Incorrect comments for registers (64 to 108).
     * dwarf_arange.c: Consistent layout for if statements.
     * dwarf_base_type.h: Minor comment type.
     * dwarf_die_deliv.c: Consistent layout for if and while statements.
     * dwarf_elf_access.c: Consistent layout for if statements.
       For Windows, include header files with relocation definitions.
       Populate new fields 'type' (section type) and 'info' (target section
       for relocation) in data structure 'Dwarf_Obj_Access_Section_s'.
       Minor typo error in function 'is_32bit_abs_reloc' for the case
       'EM_PPC64', to use the correct symbol 'R_PPC64_DTPREL32' and
       'R_PPC64_DTPREL32'.
     * dwarf_form.c: Consistent layout for if statements.
     * dwarf_frame.c: Consistent layout for if, for and while statements.
     * dwarf_frame2.c: Consistent layout for if statements.
     * dwarf_harmless.c: Consistent layout for if and for statements.
     * dwarf_init_finish.c: Consistent layout for if statements.
       Use HAVE_ELF_H, HAVE_LIBELF_H, HAVE_LIBELF_LIBELF_H to control
       the inclusion of the libelf symbols.
       New function 'add_debug_section_info' and new data structure
       'dbg_sect_s' to deal properly with .rel and .rela section types
       independently of the section name. The new algorithm to setup
       the debug sections is implemented in '_dwarf_setup'.
     * dwarf_line.c: Consistent layout for if statements.
     * dwarf_line.h: Consistent layout for if statements.
     * dwarf_loc.c: Consistent layout for if and switch statements.
     * dwarf_macro.c: Consistent layout for if statements.
     * dwarf_original_elf_init.c: Consistent layout for if statements.
     * dwarf_print_lines.c: Consistent layout for if statements.
     * dwarf_query.c: Consistent layout for if and switch statements.
     * dwarf_ranges.c: Consistent layout for if and for statements.
     * dwarf_reloc_arm.h: New file; relocations definitions for ARM.
     * dwarf_reloc_mips.h: New file; relocations definitions for MIPS.
     * dwarf_reloc_ppc.h: New file; relocations definitions for PPC.
     * dwarf_reloc_ppc64.h: New file; relocations definitions for PPC64.
     * dwarf_reloc_x86_64.h: New file; relocations definitions for X86_64.
     * dwarf_sort_line.c: Consistent layout for while statements.
     * dwarf_util.c: Consistent layout for if, for and while statements.
       New functions 'dwarf_encode_leb128', 'dwarf_encode_signed_leb128'
       to encode a value as unsiged LEB128 and signed LEB128.
     * dwarf_util.h: Consistent layout for the macros DECODE_LEB128_UWORD,
       DECODE_LEB128_SWORD, SKIP_LEB128_WORD, CHECK_DIE, READ_UNALIGNED,
       SIGN_EXTEND, READ_AREA_LENGTH to include proper tabbing.
     * libdwarf.h: Consistent layout for some typedef definitions.
       New fields 'type' (section type) and 'info' (target section for
       relocation) in data structure 'Dwarf_Obj_Access_Section_s'.
       Prototypes for new functions 'dwarf_encode_leb128' and
       'dwarf_encode_signed_leb128', defined in dwarf_util.c.
     * pro_forms.c: Consistent layout for if statements.
     * pro_frame.c: Consistent layout for if statements.
     * pro_incl.h: For Windows, include the stdafx.h header file.
     * pro_init.c: Consistent layout for if statements.
     * pro_Section.c: Consistent layout for if statements.
