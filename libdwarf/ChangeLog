2020-02-16: David Anderson
    * libdwarf2.1.mm: Now explains how dwarf_srcfiles()
      name arrays differ in DWARF5 from earlier
      debug_info versions. So callers can use
      the srcfiles array properly.
    * libdwarf2.1.pdf: Now version 2.87, dated 16 February 2020.
    * dwarf_line.c, dwarf_line.h,dwarf_print_lines.c,
      dwarf_line_table_reader_common.h: Recording DW5 line table
      header data more fully so lines print verbose
      prints more of the actual line table header.
2020-02-15: David Anderson
    * dwarf_elf_access.c,dwarf_init_finish.c: With libelf
      in use there was a mistake that broke dumping some objects that
      needed relocations.
    * dwarf_opaque.h: Corrected a is_rela to r_is_rela
2020-02-13: David Anderson
    * dwarf_elfread.c,dwarf_errmsg_list.h: Removed
      trailing whitespace.
2020-02-13: David Anderson
    *  libdwarf_version.h: New version string 
    *  dwarf_names.c,dwarf_names.h,dwarf_names_enum.h,
       dwarf_names_new.h: Regenerated with new
       version string.
2020-02-13: David Anderson
     * libdwarf/libdwarf.h.in: Added a new error code to
       properly distinguish between distinct elf section
       header issues related to relocations versus
       other section header issues.
     * libdwarf/generated_libdwarf.h.in: regenerated

    * dwarf_elf_access.c: Adding local READ_UNALIGNED_SAFE
      so we can do libelf relocations properly; .rel and .rela.
    * dwarf_elf_defines.h: Adding R_386_PC32 to the 
      applicable relocation sets.
    * dwarf_elf_load_headers.c: Now we deal with .rel.
      and .rela. relocations for better completeness.
      Removed some code duplication and complexity
      too.
    * dwarf_elf_rel_detector.c: Deals with R_386_PC32 now.
    * dwarf_elfread.c: Add READ_UNALIGNED_SAFE so we can
      do no-libelf relocations properly; .rel and .rela
    * dwarf_elfread.h: Added gr_is_rela field and
      two enums RelocRela and RelocOffsetSize so we have
      type-safety in the argument lists.
    * dwarf_init_finish.c: A new function ensures we
      skip various sections we know we do not want to
      look at.
    * dwarf_opaque.h: Declare _dwarf_ignorethissection()
      so libelf and non-libelf can ignore the unwanted
      sections.
    *  dwarf_errmsg_list.h: Entry added for the new
       DW_DLE error code.
2020-02-11: David Anderson
    * dwarf_elf_access.c,dwarf_line_table_reader_common.h,
      dwarf_tied_decls.h:
      removed trailing whitespace and final blank line.
2020-02-11: David Anderson
    * dwarf_init_finish.c: Removed code that was #if 0 #endif
2020-02-10: David Anderson
    * dwarf_elf_access.c: Now allows for .rel and .rela.
    * dwarf_elf_defines.h: Now allows for .rel and .rela.
    * dwarf_init_finish.c: Now allows for .rel and .rela.
    * dwarf_opaque.h: Adding dss_is_rela so we can
      process .rel. sections too.
2020-01-25: David Anderson
    * dwarf_form.c: DW_FORM_rnglistx was ommitted from a switch statement.
      Adding it in fixed the resulting errors in a DWARF5 object file
      built by clang 9.0.0.0
2020-01-16: David Anderson
    * dwarf_alloc.c,dwarf_die_deliv.c,dwarf_form.a,
      dwarf_query.c,dwarfstring.c,
      pro_reloc.c,pro_reloc_stream.c,pro_reloc_symbolic.c,
      pro_section.c,pro_types.c,pro_vars.c,pro_weaks.c,
      test_dwarfstring.c: Fixed indentations and
      removed trailing whitespace.
    * dwarf_xu_index.c: Ensure local Dwarf_Sig8 variables
      are always initialized. Does not fix any bug but
      does make it easier to read the code.
      Fixes indentation and removes trailing whitespace too.
2020-01-14: David Anderson
    * dwarf_names.c,dwarf_names.h,dwarf_names_enum.h,
      dwarf_names_new.h,libdwarf_version.h: Updated version string.
2020-01-05: David Anderson
    * dwarf_query.c(dwarf_offset_list): Coverity Scan CID 206598.
      Now checks for DW_DLV_ERROR where it failed to do so before,
      and returns an error instead of letting it slip through.
2020-01-03: David Anderson
    * dwarf_load_elf_headers.c(dwarf_elf_load_rela_32):
      Coverity Scan uncovered a memory leak in one
      case. CID 206524
