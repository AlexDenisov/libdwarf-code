2017-03-30 David Anderson
    * gennames.c: Update version string.
2017-03-30 David Anderson
    * dwarf_arange.c: Now uses DW_DLE_ADDRESS_SIZE_ZERO
      to be more precise about the error found in the object.
    * dwarf_die_deliv.c: Adding DWARF5 cu header reading.
      Adding support to more fully support split dwarf.
      Fixed some potential leaks (in case of erroneous DWARF).
      New functions that add functionality where needed
      to deal with reading split dwarf DWARF5.
    * dwarf_errmsg_list.c: Clarified DW_DLE_ADDRESS_SIZE_ERROR 
      string and added DW_DLE_IMPROPER_DWO_ID DW_DLE_GROUPNUMBER_ERROR
      and DW_DLE_ADDRESS_SIZE_ZERO.
    * dwarf_form.c,dwarf_loc.c: Fixed trailing whitespace.
    * dwarf_init_finish.c: Added support so split dwarf
      can be read properly.
      New function dwarf_object_init_b() is part of that support.
    * dwarf_opaque.c: Added de_groupnumber. Clarified
      some fields with commentary.
    * dwarf_original_elf_init.c: New functions
      dwarf_init_b() dwarf_elf_init_b() for groupnumber
      support.
    * dwarf_query.c: Removed trailing whitespace.
    * dwarf_xu_index.c: Moved static declaration so it
      is useful in more places in this source.
    * libdwarf.h.in: Added DW_GROUPNUMBER_ANY, DW_GROUPNUMBER_BASE,
      DW_GROUPNUMBER_DWO as part of giving better
      split dwarf support.
      Declared the new global functions mentioned just above.
2017-03-23 David Anderson
    * dwarf_query.c(dwarf_dietype_offset): dwarf_dietype_offset()
      leaked a Dwarf_Attribute. The one line fix
      removes the leak. 
2017-03-23 David Anderson
    * gennames.c: Update version string.
2017-03-21 David Anderson
    * dwarf_form.c: Vulnerability DW201703-006
      and DW201703-001 fixed.
      Some types of form were not checked as being in bounds.
    * dwarf_leb.c: Vulnerability DW201703-002 fixed.
      A check for out of bounds was done after the
      relevant dereference. Fixed.
    * dwarf_loc.c: Vulnerability DW201703-005 fixed.
      _dwarf_read_loc_expr_op() was failing to check for
      a bounds violation.
    * dwarf_query.c: Vulnerability DW201703-006.
      A call to _dwarf_reference_outside_section()
      did not pass a sufficiently careful argument list,
      so a bounds violation was missed.

2017-03-21 David Anderson
    * checkexamples.c: Updated dwarf_discr_list example
      with a cast to match function declaration.
    * libdwarf2.1.mm: Updated dwarf_discr_list example
      with a cast to match function declaration.
    * libdwarf2.1.pdf: Regenerated. Version 2.53

2017-03-04 David Anderson
    * dwarf_loc2.c(_dwarf_get_locdesc_c): Renamed to _dwarf_get_locdesc_op_c
      and corrected the handling so offsets properly dealt with
      and so a final empty operator is synthesized properly into an
      end operator like DWARF5.
2017-01-30 David Anderson
    * dwarf_die_deliv.c(_dwarf_make_CU_Context): Recent change
      in dwarf.h for DWARF5 package files required a small change
      here.
    * dwarf_xu_index.c(dwarf_get_xu_section_names): Recent change
      in dwarf.h for DWARF5 package files required a small change
      here and in dwp_secnames[].
    * dwarf.h: Now matches final DWARF5.
2017-01-23 David Anderson
    * config.h.in.cmake,configure,configure.cmake,configure.in,
      CMakeLists.txt,Makefile.in:
      Add checks for sys/elf_386.h sys/elf_amd64.h sys/elf_SPARC.h  so
      relocations noticed for Solaris.
      Better diagostic about not-building archive or shared library.
    * configure: Regenerated
    * dwarf_elf_access.c: Ifdef added for sys/elf_386.h,sys/elf_amd64.h,
      sys/elf_SPARC.h so Solaris relocations are found.
    * Makefile.in
2017-01-02 David Anderson
    * dwarf.h: DWARF5 added new DW_UT codes compared
      to earlier DWARF5 drafts.
