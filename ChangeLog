2023-03-02:  David Anderson
    commit 948352178dc791796ed574a961191844d8322493

    dwarf_attrlist()
    With a particular error (corrupted data) leading to
    an improper DW_FORM value did not return an error
    and compounded problems by continuing on,
    leading to a memory leak.
    oss-fuzz 56465

    Also moved a local down to the only lexical
    scope using the local variable.
            modified:   src/lib/libdwarf/dwarf_query.c
    We now return on the first error.

2023-03-02:  David Anderson
    commit fde4acadc00c805a0e0592848d75398c142c3f19

    Now uses the simpler dwarf_dealloc_attribute
    as that guarantees the way to dealloc.
    Also then zeroes the pointer made stale by the dealloc.
            modified:   src/lib/libdwarf/dwarf_print_lines.c

2023-03-02:  David Anderson
    commit 1fe3b2989a08c91d68e72bdd5ce437c1ccf3024d

    Was failing to check for a NULL die pointer being passed in
    where non-null was required. Now generates an error
    when a caller does that.
            modified:   src/lib/libdwarf/dwarf_frame.c

2023-02-28:  David Anderson
    commit a74e1d1f6d3bb174c985d572d4b6d555a8ea6090

    Removing unused locals and arguments.
            modified:   src/bin/dwarfdump/print_debug_names.c
            modified:   src/bin/dwarfdump/print_die.c
            modified:   src/bin/dwarfdump/print_macro.c

    New macro section output changed the baseline.
            modified:   test/testobjLE32PE.base

2023-02-27:  David Anderson
    commit ef5d172dedc7c0e2a3e3d4418efa42f318b8af17

    The implementation of dwarf_get_fde_for_die()
    needed a small change to avoid a leak.
    The API of dwarf_get_fde_for_die()
    is unchhanged.
            modified:   src/lib/libdwarf/dwarf_frame.c
            modified:   src/lib/libdwarf/dwarf_frame.h
            modified:   src/lib/libdwarf/dwarf_frame2.c

2023-02-27:  David Anderson
    commit bfbc1cf7e4e1721f60f250d990ab484f64c189ba

    Now, for SGI/MIPS executables we check
    that any DW_AT_MIPS_fde attribute actually
    has the offset of a genuine fde, and report
    an error if anything wrong.
    For the first time we are testing
    dwarf_get_fde_for_die().
            modified:   src/bin/dwarfdump/print_die.c

2023-02-27:  David Anderson
    commit fb66da9f410d1cdba92b7ae3117e8cd735dfe189

    In one place the free(paths) required by the API
    was ommitted, leading to a leak. Fixed now.
            modified:   src/bin/dwarfexample/dwdebuglink.c

2023-02-24:  David Anderson
    commit 27b1bf1b6b3f1109fdb616c17603ae3a179bd8e3

    Added commentary on an IRIX/MIPS related frame.
            modified:   src/lib/libdwarf/libdwarf.h

2023-02-24:  David Anderson
    commit 819cb71d795237536adce774576380bddac29d87

    References the new macro print function in a few
    places. The idea is to show the name of a macro
    and the value as distinct fields (with -v)
            modified:   src/bin/dwarfdump/print_macinfo.c
            modified:   src/bin/dwarfdump/print_macro.c

2023-02-24:  David Anderson
    commit 73150d06208b2d936b60e49a8dfdad2015375943

    A new dd internal function for reporting macro data.
            modified:   dd_macrocheck.h

2023-02-24:  David Anderson
    commit ce58b4e9e463b7ac99fa4d0a0e15782c432320a3

    Corrected  and commented the code splitting macro
    name from the macro value (if any value there).
            modified:   src/lib/libdwarf/dwarf_macro.c

2023-02-23:  David Anderson
    commit 309f0935a0846157e99d5627ba7a4ba0d40a968c

    Each has a few lines of new code
    testing libdwarf small functions not
    otherwise tested.
            modified:   src/bin/dwarfdump/print_die.c
            modified:   src/bin/dwarfdump/print_lines.c

2023-02-23:  David Anderson
    commit b23afe59362cfeace31215412ed24a8f46275327

    Fixed a couple arguments to use the dw_<name> form.
    Comments now explain how a function for
    experimental line tables is not actually useful.
            modified:   src/lib/libdwarf/libdwarf.h

2023-02-23:  David Anderson
    commit d91391381b145c2bf9479be82c0b76f2ec851471

    Updated the tarrrelease: field
    with 0.6.0 release where appropriate.
            modified:   data.txt

2023-02-23:  David Anderson
    commit 0c045738675965a8ed7c4aea9f8dfa5eb297b24f

    These now have the version as 0.7.0
            modified:   doc/libdwarf.dox
            modified:   doc/libdwarfp.mm

2023-02-23:  David Anderson
    commit 22cb0af1ebcf141a6f5d1bdb99666dedb3010eaa

    Now all name the version as 0.7.0
            modified:   CMakeLists.txt
            modified:   configure.ac
            modified:   meson.build

2023-02-23:  David Anderson
    commit fbd8f69c1d37f0675112227b8a3af321c75388e7

    make rebuild
    updated the version string in comments
    in these generated source files.
            modified:   src/bin/dwarfdump/dwarfdump-af-table.h
            modified:   src/bin/dwarfdump/dwarfdump-ta-ext-table.h
            modified:   src/bin/dwarfdump/dwarfdump-ta-table.h
            modified:   src/bin/dwarfdump/dwarfdump-tt-ext-table.h
            modified:   src/bin/dwarfdump/dwarfdump-tt-table.h

2023-02-23:  David Anderson
    commit 24fa44cc0492ae212e20e80a6faaf84517427655

    Revised to provide a better print of the abbrevs
    part of a .debug_names block and to check
    and report on the reuses of an abbrev.
    Add -v to
    dwarfdump --print-debug-names

            modified:   src/bin/dwarfdump/print_debug_names.c

    Make rebuild changed version in a comment. Now 0.7.0
            modified:   src/lib/libdwarf/dwarf_names.c

2023-02-23:  David Anderson
    commit 217037be0da853b2dfb08e52a2c8c3a480a0ae47

    Removed the API functions
    dwarf_dnames_abbrev_by_code()
        (which is slow, not needed
        Use either dwarf_dnames_name() or
        dwarf_dnames_abbrevtable() instead, depending
        on what you want to accomplish.)

    And
    dwarf_dnames_abbrev_form_by_index()
        (which never worked
        and was never tested except just before removing
        this function).

            modified:   src/lib/libdwarf/dwarf_debugnames.c
            modified:   src/lib/libdwarf/libdwarf.h

2023-02-23:  David Anderson
    commit 0535a155c5ddb2537f8ec8c84795eff025ec15eb

    When the form is an indexed addr we check
    that that referenced via the index and DIE
    we get the correct addr.
    A sanity and function correctness check.
            modified:   src/bin/dwarfdump/print_die.c

2023-02-23:  David Anderson
    commit cbb1c34c3a7571a3e14f06576ff244cedb7af95c

    Removed trailing whitespace.
            modified:   src/bin/dwarfdump/dd_tsearchbal.c
2023-02-20:  David Anderson
    Release of libdwarf 0.6.0 today.
    modified:   ChangeLog
    modified:   doc/libdwarf.dox
    modified:   doc/libdwarf.pdf

2023-02-20:  David Anderson
    commit 8a8f028978cb041e64592ad52b54567459b9a25e

    make rebuild should not have copied
    dwarf_names.c (which gennames creates)
    into dwarfdump source. So the cp is removed.
    The mv to libdwarf source remains and is essential.
            modified:   src/bin/gennames/Makefile.am

2023-02-20:  David Anderson
    commit 8777ffee659b20a0d276c55d78d0d1fcf96319b3

    There was no reason to have make rebuild
    copy dwarf_names.c into dwarfdump.
    The one in libdwarf suffices.
            deleted:    ../dwarfdump/dwarf_names.c

2023-02-20:  David Anderson
    commit 24ae907a3034925521ed408c6ab4384e38f49a3a

    make rebuild updated to match 0.6.1 as release,
    all these instances are in comments.
            modified:   src/bin/dwarfdump/dwarf_names.c
            modified:   src/bin/dwarfdump/dwarfdump-af-table.h
            modified:   src/bin/dwarfdump/dwarfdump-ta-ext-table.h
            modified:   src/bin/dwarfdump/dwarfdump-ta-table.h
            modified:   src/bin/dwarfdump/dwarfdump-tt-ext-table.h
            modified:   src/bin/dwarfdump/dwarfdump-tt-table.h
            modified:   src/lib/libdwarf/dwarf_names.c

2023-02-20:  David Anderson
    commit e9fbfc0fac2f8fdeb2dbf057d47acf6a4b9b6b51

    tools/updatesemanticversion.py 0.6.1
    setting a new version.
            modified:   CMakeLists.txt
            modified:   configure.ac
            modified:   doc/libdwarf.dox
            modified:   doc/libdwarfp.mm
            modified:   meson.build
            modified:   src/lib/libdwarf/libdwarf.h

2023-02-20:  David Anderson
    commit da8acdad735740579d2f79856da4a617578e0a36

    Change file-local function names to not
    start with dwarf_. That is reserved for API
    function names.
            modified:   src/bin/dwarfdump/dd_tsearchbal.c

2023-02-20:  David Anderson
    commit 52a8e4b9bd0fe8cff9d7e7fcb8ea6682d60c45b9

    Added pkgconf to macos autotools run, that is
    now required where it was not required earlier.
            modified:   test.yml

2023-02-20:  David Anderson
    commit 80ef777ba7e2c26a35d849f365ad3ca157062087

    workflow test, added a brew install pkgconf
            modified:   mac_autotools.yml

2023-02-20:  David Anderson
    commit 104aa2da46a1a798a264654508b1e1e32baf799d

    Adding as this one test is failing in test.yml
    .github/workflows:
            new file:   mac_autotools.yml

2023-02-20:  David Anderson
    commit 2684f4314098ff9677b4d5c18f510666fe8ce0b8

    Now up to date for release 0.6.0
            modified:   ChangeLog

2023-02-20:  David Anderson
    commit a93ff50891b07b83c1becb7cc1329236f6732cde

    This is the commit (of documentation) for
    the 6.0.0 release.
            modified:   ChangeLog
            modified:   doc/libdwarf.dox
            modified:   doc/libdwarf.pdf

2023-02-18:  David Anderson
    commit 9cab819ba330011b0e78754ee4f6b8937b4fd051

    Source used for testing/fuzzing.
            new file:   fuzz/fuzz_aranges.c
            new file:   fuzz/fuzz_crc.c
            new file:   fuzz/fuzz_crc_32.c
            new file:   fuzz/fuzz_debug_addr_access.c
            new file:   fuzz/fuzz_debug_str.c
            new file:   fuzz/fuzz_debuglink.c
            new file:   fuzz/fuzz_die_cu.c
            new file:   fuzz/fuzz_die_cu_attrs.c
            new file:   fuzz/fuzz_die_cu_attrs_loclist.c
            new file:   fuzz/fuzz_die_cu_info1.c
            new file:   fuzz/fuzz_die_cu_offset.c
            new file:   fuzz/fuzz_die_cu_print.c
            new file:   fuzz/fuzz_dnames.c
            new file:   fuzz/fuzz_findfuncbypc.c
            new file:   fuzz/fuzz_gdbindex.c
            new file:   fuzz/fuzz_globals.c
            new file:   fuzz/fuzz_gnu_index.c
            new file:   fuzz/fuzz_init_b.c
            new file:   fuzz/fuzz_init_binary.c
            new file:   fuzz/fuzz_init_path.c
            new file:   fuzz/fuzz_macro_dwarf4.c
            new file:   fuzz/fuzz_macro_dwarf5.c
            new file:   fuzz/fuzz_rng.c
            new file:   fuzz/fuzz_set_frame_all.c
            new file:   fuzz/fuzz_showsectgrp.c
            new file:   fuzz/fuzz_simplereader_tu.c
            new file:   fuzz/fuzz_srcfiles.c
            new file:   fuzz/fuzz_stack_frame_access.c
            new file:   fuzz/fuzz_str_offsets.c
            new file:   fuzz/fuzz_tie.c
            new file:   fuzz/fuzz_xuindex.c

2023-02-13:  David Anderson
    commit 77c30fe6c97f078c0f57ec946f59754dada497fd

    Up to date with git log
            modified:   ChangeLog

2023-02-13:  David Anderson
    commit b0af192116cbe4a79b0ca7b8fb47900b5ae3648f

    Now up to date with latest
    changes in module titles..
            modified:   doc/libdwarf.pdf

2023-02-11:  David Anderson
    commit 4cb3d61c49edb2fcf888708060c9ce09f952fb73

    Working toward easier to read documentation.
    All the changes are in doxygen comments.
            modified:   doc/checkexamples.c
    Regenerated
            modified:   doc/libdwarf.pdf

            modified:   src/bin/dwarfexample/jitreader.c
            modified:   src/bin/dwarfexample/showsectiongroups.c
            modified:   src/lib/libdwarf/libdwarf.h

2023-02-11:  David Anderson
    commit 447a6d8f35f5945c0a8edbb01f3afc2a28765538

    Small tweeks relating the two
    loclist examples (with links from each
    to the other).
            modified:   doc/checkexamples.c
    Corrected date to today.
            modified:   doc/libdwarf.dox

2023-02-11:  David Anderson
    commit 1805c17ae90ea29b913fbd0aca7dad3253c18d40

    Loclist access/locexpr access is valid for
    DWARF2 through DWARF5, clarified that here.
            modified:   doc/checkexamples.c
            modified:   src/lib/libdwarf/libdwarf.h

2023-02-09:  David Anderson
    commit 13f1fe1cb73bc393f4abef85cdbb378ffd5bcdb2

    With latest from gitlog
            modified:   ChangeLog

2023-02-09:  David Anderson
    commit ce1fee38c5586889e2d2dfd6af35dc083be9028a

    Emphasize the new argument style
    is a suggestion, not a requirement.
            modified:   CODINGSTYLE.md

2023-02-09:  David Anderson
    commit ce1fee38c5586889e2d2dfd6af35dc083be9028a

    Emphasize the new argument style
    is a suggestion, not a requirement.
            modified:   CODINGSTYLE.md

2023-02-09:  David Anderson
    commit 3312467a707e743f91f535f4fcdcde4dc6bb5981

    A minor addition that describes
    the (new) approach to argument list presentation.
    It's mostly not yet followed and is not
    required.
            modified:   CODINGSTYLE.md

2023-02-09:  David Anderson
    commit 48bd6abf355262f29b293a24c425dc81eec9b639

    Improving the consistency of presentation of arguments
    to functions. No logic change.
            modified:   dwarf_query.c

2023-02-09:  David Anderson
    commit 43aeedce6984b7c09ea4adc608f277279c5e5683

    Fixing discrepancies from CODINGSTYLE.
    Trailing whitespace, a too-long line,
    and if(  ->  if (
    No change in logic.
            modified:   src/lib/libdwarf/dwarf_debugaddr.c
            modified:   src/lib/libdwarf/dwarf_gdbindex.c
            modified:   src/lib/libdwarf/dwarf_init_finish.c
            modified:   src/lib/libdwarf/dwarf_loclists.c
            modified:   src/lib/libdwarf/dwarf_util.c
            modified:   src/lib/libdwarf/dwarf_xu_index.c

2023-02-09:  David Anderson
    commit 16b3f93fac0989d25c129182130afc62719ffa4e

    Bringing up to date with git log
            modified:   ChangeLog

2023-02-09:  David Anderson
    commit a9a8924d775c0389220a0fce7a762f4752fd974c

    Everywhere we dealloc (drop)
    a Dwarf_Error ensure we have a valid
    Dwarf_Error* to dereference for the
    dealloc.
    These situations arise when the calling
    program passes NULL as the Dwarf_Error*
    to a libdwarf function, which normally
    only happens in toy or small calling
    programs.
    In libdwarf/
            modified:   dwarf_debugaddr.c
            modified:   dwarf_die_deliv.c
            modified:   dwarf_fission_to_cu.c
            modified:   dwarf_form.c
            modified:   dwarf_generic_init.c
            modified:   dwarf_init_finish.c
            modified:   dwarf_loc.c
            modified:   dwarf_loclists.c
            modified:   dwarf_query.c
            modified:   dwarf_str_offsets.c
            modified:   dwarf_util.c

2023-02-08:  David Anderson
    commit 4a78820c8749eeca6f56d4f31693965f7cac0473

    Changed the name of the error arg
    from err to error for consistency.
            modified:   dwarf_alloc.c

2023-02-08:  David Anderson
    commit 3423ca18432b02b3ac2ecbb8541a16becb373474

    Changed the Dwarf_Error name to be error
    for consistency across the rest of libdwarf.
            modified:   dwarf_frame.c
            modified:   dwarf_gdbindex.c
            modified:   dwarf_line.c
            modified:   dwarf_print_lines.c
            modified:   dwarf_util.c
            modified:   dwarf_xu_index.c

2023-02-03:  David Anderson
    commit 43107bc59332a47aeb17e4a63ad4f191ab92c41c

    Something went badly wrong with the pull or something.
    Obvious misaligment from the last change.
            modified:   CMakeLists.txt

2023-02-03:  David Anderson
    commit a26db7aeefb8bb6a9d8fca029459e7ea071e8f00

    Using @code @endcode so the cc command
    looks right.
            modified:   doc/checkexamples.c

    Updated date of last update.
            modified:   doc/libdwarf.dox

    Regenerated.
            modified:   doc/libdwarf.pdf

2023-02-03:  Ludovic Chopin
    commit 74837fb700269b26287a401a8d91061725c48c82

    CMakeLists.txt: fix crosscompile cmake build (#150)

    `check_c_source_runs` cannot be run in crosscompilation cases,
    only check compilation by replacing it with `check_c_source_compiles`

    Fixes #149

    Co-authored-by: Ludovic Chopin <lchopin@wyplay.com>

2023-02-02:  David Anderson
    commit 6123495407fa877b6a2e17f7a7f7c0e5632bdcc5

    Now up to date with git log
            modified:   ChangeLog

2023-02-02:  David Anderson
    commit fc1c55b70f52f18f491f82a9ffda8fa1d379fe58

    set_up_section() is now easier to understand
    yet does the same job.
            modified:   src/lib/libdwarf/dwarf_init_finish.c

2023-02-02:  David Anderson
    commit 08bcf43f4b293d5206dfcc2f107ea0041fb8d5de

    Added -Wnostringop-overread to the -W list
    as -Wstringop-overread  defaults *on* in alpinelinux
    gcc and sometimes has false positives
    depending on other compiler options (not good).
            modified:   configure.ac

    Corrected two typos in comment words. LFAGS -> FLAGS
            modified:   m4/dw_compiler.m4

2023-02-01:  David Anderson
    commit 27704554af7294899f33706c2908565b1ad8d20e

    Up to date with git log
            modified:   ChangeLog

2023-02-01:  David Anderson
    commit 5ea279585fe15b8a9a0cf8efe034518799e2803f

    Ensure new file libdwarf/libdwarf.pc.cmake gets into
    the distribution.
            modified:   src/lib/libdwarf/Makefile.am

2023-01-31:  David Anderson
    commit 44bd35172ee75cb96d7c56031b2f986336eaf435

    A few words on cmake 'make install' added.
            modified:   README.cmake

2023-01-31:  David Anderson
    commit 7368a1062271e08e7df0f188d8b02c9991a0d03a

    This creates a useful libdwarf.pc with install.

    It also creates a useless extra libdwarf.pc
    which is not at all useful. Unsure why.
    You will get better results using meson instead
    in most cases.
            modified:   src/lib/libdwarf/CMakeLists.txt
            new file:   src/lib/libdwarf/libdwarf.pc.cmake

2023-01-31:  David Anderson
    commit a8b59bea77d868fae8442e69fe4d366c7045df61

    Bringing up to date.
            modified:   ChangeLog

2023-01-31:  David Anderson
    commit 4823a9a14a127ba298b37cbc7613de0c21e0682a

    Documenting  corrections to dwarf_offset_list()
            modified:   doc/libdwarf.dox

    Improve an error message related to checking
    dwarf_offset_list() results.
    Correct the dealloc call to be correct.
    This function did not, before this, work
    on 32bit pointer systems.
            modified:   src/bin/dwarfdump/print_die.c

    Dealing with the new DW_DLA_UARRAY allocation type
    for dwarf_offset_list().
            modified:   src/lib/libdwarf/dwarf_alloc.c
            modified:   src/lib/libdwarf/dwarf_query.c

    Defining and documenting DW_DLA_UARRAY.
            modified:   src/lib/libdwarf/libdwarf.h

2023-01-28:  David Anderson
    commit ef60bff461a533da09f4ad3e9c1ece1249237ea2

    Bringing ChangeLog up to date with git log.
            modified:   ChangeLog

2023-01-28:  David Anderson
    commit 4f6376d8f4d57497e4083405d94f00651576b51a

    _dwarf_memcpy_swap_bytes is now simpler and accomodates
    all words 8 bytes or less long by swapping bytes.
      modified:   src/lib/libdwarf/dwarf_memcpy_swap.c

    Now uses memcpy to write part of
    the line table header, not WRITE_UNALIGNED
    as WRITE_UNALIGNED is intended for integers
    requiring byte-swapping when the target object
    and the runnning libdwarfp do not have the
    same endianness. the write changed is a set of
    bytes, not an integer at all.
      modified:   src/lib/libdwarfp/dwarf_pro_section.c

2023-01-24:  David Anderson
    commit ac2952e266e617cddd9d371d18b6664906e7e012

    Now notes release in a couple entries (0.5.0).
            modified:   bugxml/data.txt

    Latest.
            modified:   doc/libdwarf.pdf

2023-01-24:  David Anderson
    commit 8b8265142a78563b840df9b02f15b263cac8708e

    Now with the git id of the fix.
            modified:   bugxml/data.txt
    Mention the bug in Changes from 0.5.0 to 0.60.
            modified:   doc/libdwarf.dox

2023-01-24:  David Anderson
    commit d059264c2e2a8e74b6ad6e13b7ea062b2cbec650

    Instead of strlen, use esb_string_len() on
    the struct esb_s string so safe_strcpy()
    is aware of the copy-from length..
            modified:   src/bin/dwarfdump/print_die.c

2023-01-24:  David Anderson
    commit 97e90eb7ab98df60b8da0bdc2ac855711c4db804

    Fix DW202301-001, where
    DW_FORM_strx3
    DW_FORM_addrx3
    were mistakenly treated as 4 byte values.
            modified:   src/lib/libdwarf/dwarf_util.c

2023-01-21:  David Anderson
    commit 52f9045ac2d0e07e83b0e617eb75a7906722303d

    Bringing up to date with git log.
            modified:   ChangeLog

2023-01-21:  David Anderson
    commit 2fc3bdd86abe60a2083e0baaeabf5fe54e966412

    Removing trailing whitespace and fixing indents.
    Fixed a couple lines pointlessly longer than
    libdwarf CODINGSTYLE specifies.
            modified:   src/bin/dwarfdump/dd_command_options.c
            modified:   src/bin/dwarfdump/dd_sanitized.c
            modified:   src/bin/dwarfdump/print_frames.c
            modified:   src/bin/dwarfdump/print_lines.c
            modified:   src/bin/dwarfexample/findfuncbypc.c
            modified:   src/bin/dwarfexample/jitreader.c
            modified:   src/bin/dwarfexample/showsectiongroups.c
            modified:   src/bin/dwarfexample/simplereader.c
            modified:   src/lib/libdwarf/dwarf_crc.c
            modified:   src/lib/libdwarf/dwarf_debuglink.c
            modified:   src/lib/libdwarf/dwarf_elf_load_headers.c
            modified:   src/lib/libdwarf/dwarf_str_offsets.c
            modified:   src/lib/libdwarf/libdwarf.h
            modified:   src/lib/libdwarf/dwarf_arange.c

2023-01-21:  David Anderson
    commit 4274fabfb0baf26db172cb818e8e1245fed3913b

    Fixing seven defects noted by CoverityScan.
            modified:   src/bin/dwarfdump/print_die.c
            modified:   src/bin/dwarfdump/print_lines.c
            modified:   src/bin/dwarfexample/jitreader.c
            modified:   src/bin/dwarfexample/simplereader.c

2023-01-21:  David Anderson
    commit b78bd35437ca6649a860bf83fa6b454a2a7bc119

    Bringing git log up to date.
            modified:   ChangeLog

2023-01-21:  David Anderson
    commit e57c7e731ca54002fc00595a62f3d99191c27d33

    Removing a set of DW_FRAME #define
    that were just added and are not actually
    desirable.
            modified:   src/lib/libdwarf/dwarf.h

    Updateing these as a consequence.
            modified:   src/bin/dwarfdump/dwarf_names.c
            modified:   src/lib/libdwarf/dwarf_names.c

    Some duplicate dwarf_get_GNUIVIS_name() entries
    removed.
            modified:   src/lib/libdwarf/libdwarf.h

2023-01-21:  David Anderson
    commit 9ed3f2ff43bfc611ee763bab7a8907941137fd26
    Merge: b4eb3ae5 671571a9

    Merge branch 'master' of https://github.com/davea42/libdwarf-code
    Cmake now using PROJECT_DIR

2023-01-21:  Pavel Dovgalyuk
    commit 671571a9a14999b88662ce855513545da87f4602

    Replace CMAKE dirs with PROJECT dirs (#148)

    Replacing CMAKE_*_DIR with PROJECT_*_DIR allows adding this
    project as a subproject in cmake config.

2023-01-20:  David Anderson
    commit b4eb3ae529a54e8bac4de6408e0f63b4a72f80dc

    The added entries in dwarf.h are now reflected
    in these functions. Now dwarf_get_FRAME_name()
    knows of the full set of such defined
    in dwarf.h.
    Created, as always, by the command 'make rebuild' in
    a build directory.
            modified:   src/bin/dwarfdump/dwarf_names.c
            modified:   src/lib/libdwarf/dwarf_names.c

2023-01-20:  David Anderson
    commit d2ac319d3349b86b6f5fbba009657e3c8e52220d

    Refining a printf used in debugging, and only debugging.
            modified:   src/bin/gennames/gennames.c

2023-01-20:  David Anderson
    commit d899c99aa0a7e29cdb3d024c875561a43579b048

    The DW_FRAME defines set is expanded to
    fill in a gap. A gap that should never have
    existed. There is no effect on the API other than
    dwarf_get_FRAME_name() can now return a full
    set of the basic static set.
            modified:   src/lib/libdwarf/dwarf.h

2023-01-20:  David Anderson
    commit 04ab8c31ba97ee7e21c251d6f605aff54ebeb326

    Corrected DW_IDX_hi_user
    from  0x0fff to the DWARF5
    value of 0x3fff.
            modified:   src/lib/libdwarf/dwarf.h

2023-01-17:  David Anderson
    commit a4acf84b0f3aa087e4ed4413bcd9b13f7cae7aa3

    Bringing up to date with git log
            modified:   ChangeLog

2023-01-17:  David Anderson
    commit 1bffee59eb8de582fe360601a0a7d485a45fe066

    Twenty functions named
      dwarf_<something>
    were really internal-only functions. Not in the API.
    A few named decades ago, some created more recently.
    Now all such have a leading single underbar, so named
    _dwarf_<something> as a clear indication they
    are not part of the API.
    These became apparent comparing the API (libdwarf.h)
    to functions reported by coverage analysis (gcov/lcov).
            modified:   dwarf_arange.c
            modified:   dwarf_elf_load_headers.c
            modified:   dwarf_frame.c
            modified:   dwarf_line.c
            modified:   dwarf_machoread.c
            modified:   dwarf_machoread.h
            modified:   dwarf_peread.c
            modified:   dwarf_tsearchhash.c

2023-01-16:  David Anderson
    commit d46c1d2eeac7a66a699a892b3d3c50b6a6f135e1

    Now showing latest fixes to pkgconf
    references for libzstd.
            modified:   ChangeLog

2023-01-16:  David Anderson
    commit 31c3f298d4d11ec92fde6b5d176007ed20fe3755

    Changed zstd_deps to libzstd_dep and
    similarly for requirements_libdwarf_pc.
    To match the real pkgconf name of the library.
            modified:   meson.build

    Fixed the typo ref config_h.set11
    where config.h.set10 was meant. It means set to one or
    zero specifically (rather than a more
    general set). In meson documentation, look for
    config_data.set10
            modified:   src/lib/libdwarf/meson.build

2023-01-16:  David Anderson
    commit f6d5dc20755cfcba300bac9eb27f86447c51a3df

    Corrected the requirements_libdwarf_pc
    to reference libzstd  because the
    pkgconf name is libzstd.pc
            modified:   configure.ac

2023-01-16:  David Anderson
    commit 7c83a9e7dd5a7238b16c7a38862a95fd3d39e2ba

    Corrected the check for libzstd, so HAVE_ZSTD
    and HAVE_ZSTD_H are now set in config.h
            modified:   CMakeLists.txt

2023-01-14:  David Anderson
    commit bf923fc046fd868808489e5137b9f7bb0d982902

    To avoid warnings from a careful compiler we avoid
    redefining glflags when  building test__sanitized.c
    by using a -DTESTING in test/ builds
    to remove the reference to glflags
    from dd_sanitized.c.
            modified:   src/bin/dwarfdump/dd_sanitized.c
            modified:   test/CMakeLists.txt

2023-01-14:  David Anderson
    commit 76bebde070af2d49360a141053962949a9ea913a

    Each had a pointer subtraction and wanted
    a result of Dwarf_Unsigned so now using
    uintptr_t and Dwarf_Unsigned casts to
    assure compilers this is as intended.
            modified:   src/lib/libdwarf/dwarf_debuglink.c
            modified:   test/test_dwarf_tied.c

2023-01-13:  David Anderson
    commit 3f8182189e94c9db549f1c59ac4fddafe3da30e4

    Now with the warning fixed.
            modified:   ChangeLog

2023-01-13:  David Anderson
    commit ac6dd985c978dbeaca258be325b98d6aafb805b2

    To do a pointer-difference without
    compiler warnings we fix using uintptr_t.
            modified:   dwarf_str_offsets.c

2023-01-12:  David Anderson
    commit e14770ba81d514b9e962b82479c30ece8a1a2db0

    Up to date with git log, including
    fixing a bug with make check (which
    would cause compilation failure).
            modified:   ChangeLog

2023-01-11:  David Anderson
    commit 9f0c8cd7ba0903b2fea66115afb8b16312ea4222

    Needed to add a fake _dwarf_error_string()
    implementation so this can compile (as we
    do not link with libdwarf itself).
            modified:   test/test_linkedtopath.c

2023-01-11:  David Anderson
    commit 5ca41b6751adf51856b839da3168a7baf2a7268c

    Now all these accept option --suppress-de-alloc-tree
    and ignore it so regressiontests can use
    these more easily.
            modified:   src/bin/dwarfexample/dwdebuglink.c
            modified:   src/bin/dwarfexample/findfuncbypc.c
            modified:   src/bin/dwarfexample/frame1.c
            modified:   src/bin/dwarfexample/jitreader.c
            modified:   src/bin/dwarfexample/showsectiongroups.c
            modified:   src/bin/dwarfexample/simplecrc.c
            modified:   src/bin/dwarfexample/simplereader.c

2023-01-10:  David Anderson
    commit f043691022b9ec4c6dc13ad6a7e650e7a6ea7dfb

    Fixing dwardump -h : changes now in ChangeLog
            modified:   ChangeLog

2023-01-10:  David Anderson
    commit 78855e4b8b1f48e456cec9adbf21de1d78ff5433

    Improved the -h (help) message for
    --print-strings and --print-str-offsets
    dwarfdump options.
            modified:   src/bin/dwarfdump/dd_command_options.c

2023-01-10:  David Anderson
    commit d3e59a126829b098ac5f1a7ab757f545287607f1

    The -f option was omitted from the help text.
    Oops. Added it following -F in help.
            modified:   src/bin/dwarfdump/dd_command_options.c

2023-01-09:  David Anderson
    commit 8133c2d0a6068c99193cf47f36de3dced60a7855

    Now with latest includeing git fix id
    for bug DW202212-001
            modified:   ChangeLog

2023-01-09:  David Anderson
    commit 35fb2b0eb05e6e52eaf4a674429067644d7bdb57

    Updated DW202212-001 with git fix id.
            modified:   bugxml/data.txt

2023-01-09:  David Anderson
    commit 45f6d778811553a835916b60845933e6dda63b7f

    See  bug DW202212-001
    There are four different Elf/Dwarf corruptions here
    not previously noticed.  All these now noticed.
            modified:   src/lib/libdwarf/dwarf_die_deliv.c
            modified:   src/lib/libdwarf/dwarf_elf_load_headers.c
            modified:   src/lib/libdwarf/dwarf_generic_init.c
            modified:   src/lib/libdwarf/dwarf_query.c

2023-01-04:  David Anderson
    commit 096f1ab0727baa1ba72b08d00953e2a5b243a2b3

    Defines the new DenialOfService bug DW202212-001
            modified:   bugxml/data.txt

    correct a printf for clarity.
    Add a return on success finding the pc in the object.
            modified:   src/bin/dwarfexample/findfuncbypc.c

    Add a new option to help test this cude.
    --suppress-de-alloc-tree is the option.
            modified:   src/bin/dwarfexample/frame1.c

    Add a new option to help test this cude.
    --suppress-de-alloc-tree is the option.
            modified:   src/bin/dwarfexample/jitreader.c

    Clarify the error report in case the group requested
    is simply not present.
    Add a new option to help test this cude.
    --suppress-de-alloc-tree is the option.
            modified:   src/bin/dwarfexample/showsectiongroups.c

    Add a new option to help test this cude.
    --suppress-de-alloc-tree is the option.
    Simplify the code in main() reading argv[].
            modified:   src/bin/dwarfexample/simplereader.c

    Add new tests so if an unreasonable build-id
    is present an error is returned.
            modified:   src/lib/libdwarf/dwarf_debuglink.c

    Define the meaning of 'unreasonable build-id'
    as DW_BUILDID_SANE_SIZE.
            modified:   src/lib/libdwarf/dwarf_debuglink.h

    Look for a variety of Elf object errors not
    previosly noted. See DW202212-001.
            modified:   src/lib/libdwarf/dwarf_elf_load_headers.c

2023-01-04:  David Anderson
    commit c49cf80fd866d968c3606f520050e74deeb7d665

    Up to date 2023
            modified:   ChangeLog
    Now with all 2022
            modified:   ChangeLog2022

2023-01-04:  David Anderson
    commit 5960a7983e58c4263d752daa53866c25f3e4ef50

    New log, new year.
            modified:   ChangeLog
            new file:   ChangeLog2022

    New DW_DLE error codes for bug DW202212-001
            modified:   src/lib/libdwarf/dwarf_errmsg_list.h
            modified:   src/lib/libdwarf/libdwarf.h
