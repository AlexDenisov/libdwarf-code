2020-03-12:   David Anderson
    * print_lines.c: Eliminate leaks that relied
      on de_alloc_tree to clean up.
2020-03-12:   David Anderson
    * makename.c: Correct some comments.
2020-03-12:   David Anderson
    * print_aranges.c: Eliminate leaks that relied
      on de_alloc_tree to clean up.
2020-03-12:   David Anderson
    * print_abbrevs.c: Eliminate leaks that relied
      on de_alloc_tree to clean up.
2020-03-12:   David Anderson
    * command_options.h, command_options.c: Adds
      uri_data_constructor() and uri_data_destructor()
      to avoid an old memory leak (called from dwarfdump.c).
2020-03-12:   David Anderson
    * dwarfdump.c: Cleans up old and small memory
      leaks and simplifies the code as well.
2020-03-09:   David Anderson
    * command_options.c: Implements two options primarily for
      dwarfdump developers: --suppress-de-alloc-tree 
      and --print-alloc-sums.
    * dwarf_names.c,dwarf_names.h,dwarfdump-ta-ext-table.h,
      dwarfdump-ta-table.h,dwarfdump-tt-ext-table.h,
      dwarfdump-tt-table.h: regenerated with latest
      version date string.
    * dwarfdump.c: Implements the two new options.
    * glflags.c,glflags.h: declares and instantiates
      a new global flag gf_print_alloc_sums for the new option
      --print-alloc-sums.
    * print_die.c: Arranged correct dwarf_dealloc of
      DW_DLA_ERROR errors when calling dwarf_formudata/sdata
      and discarding errors.
2020-02-25:   David Anderson
    * dwarf_names.c,dwarf_names.h,dwarfdump-ta-ext-table.h,
      dwarfdump-ta-table.h dwarfdump-tt-ext-table.h dwarfdump-tt-table.h:
      updated date string.
2020-02-25:   David Anderson
    * esb.c: Slight corrections so a %-12s will ignore the -12
      if the string to be inserted is more than 11 bytes long.
      Allowed use of UNUSEDARG.
    * runtests.sh: Restore the running of the testesb.c
      test program.
    * testesb.c: Added a new test case specifically for
      testing the change in esb.c. Eliminated the
      unneeded tests on allocation-size, that was not
      helpful, yet was tedious to make meaningful.
2020-02-20:   David Anderson
    * print_die.c: Removed the last snprintf the required
      fixed spaces and now use esb functions to do the
      message creation.
2020-02-19:   David Anderson
    * checkutil.c,common.c,naming.c,print_abbrevs.c,print_die.c,
      print_lines.c: Removed the ORIGINAL_SPRINTF
      versions in favor
      of esb_append_printf_[usi] versions. 
      We have not been using the s[n]printf
      versions for a while now. 
2020-02-16:   David Anderson
    * globals.h: Adds DWVERSION5 to use with testing for
      version number details (which matters when calling 
      dwarf_srcfiles())
    * print_die.c: Now recognizes that DWARF5 is different
      from earlier versions in the way dwarf_srcfiles()
      array of string pointers is to be used.
      Refactored the srcfiles checking to its own
      function to simplify reading the code.
2020-02-13:   David Anderson
    * dwarf_names.c dwarf_names.c,dwarfdump-ta-ext-table.h,
      dwarfdump-ta-table.h,dwarfdump-tt-ext-table.h,
      dwarfdump-tt-table.h: regenerated with new
      date string.
2020-01-27:   David Anderson
    * print_die.c: Now attributes the correct actual form
      in more places (meaning in error messages, here and
      in the previous commit)..
2020-01-25:   David Anderson
    * print_die.c: Now attributes the correct actual form
      name (as opposed to a vaguely generic FORM name)
2020-01-16:   David Anderson
    * print_die.c: Now ensures local Dwarf_Sig8
      variables are always initialized with zero bytes.
      This does not fix bugs, but it makes the code easier
      for the reader to reason about.
    * testobjLE32PE.test.c: Removed trailing whitespace
      and fixed indentation errors.
2020-01-14:
    * dwarf_names.c,dwarf_names.h,dwarfdump-ta-ext-table.h,
      dwarfdump-ta-table.h,dwarfdump-tt-ext-table.h,dwarfdump-tt-table.h:
      Updated version string.
2020-01-05:
    * dwconf.c: Fix CoveritySan CID 206594 resource leak
      if an error reading dwarfdump.conf.
    * sanitized.c(no_questionable_chars): Fixed CoverityScan
      CID 206595. The code was
      failing to sanitize % characters: the test for %
      has been moved up a few lines.
      do_sanity_insert() had the same problem with %. Fixed.
      And do_sanity_insert() had a final line of unreachable
      code; now fixed by simplifying the code (an ASSERT
      added in a comment). Coverity Scan CID 206596.
    * print_die.c(traverse_one_die): Was failing to check
      for the normal dwarf return int and letting 
      next code deal with the fallout (and leak an error
      record). Now we check and avoid any leak or surprise.      
      Coverity Scan CID 20659


